{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","list","handleEditbtn","removeItem","className","map","item","console","log","id","title","key","type","onClick","Alert","msg","removeAlert","useEffect","timeout","setTimeout","clearTimeout","App","useState","localStorage","getItem","JSON","parse","getLocalStorage","setList","React","value","setValue","isEditing","setIsEditing","editID","setEditId","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","prevState","placeholder","onChange","target","length","specificItem","find","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9f86c2d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\n\r\nconst List = ({list, handleEditbtn, removeItem}) => {\r\n  return(\r\n    <div className='grocery-list'>\r\n      {list.map((item)=>{ \r\n        console.log(item)\r\n        const {id,title} = item   //sth assigned to id and title in App.js\r\n       return( \r\n          <article className='grocery-item' key={id}>\r\n            <p className='title'>{title}</p>\r\n            <div className='btn-container'>\r\n              <button type=\"button\" className='edit-btn' onClick={()=>handleEditbtn(id)}><FaEdit /></button>\r\n              <button type=\"button\" className='delete-btn' onClick={()=>removeItem(id)}>< FaTrash/></button>\r\n            </div>\r\n          </article>\r\n\r\n        ) \r\n       })} \r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default List\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({type,msg, removeAlert,list}) => {  \r\n  //we want to remove any type of alert after 3s so we should use useEffect\r\n  useEffect(()=>{\r\n    const timeout = setTimeout(()=>{\r\n      removeAlert()\r\n    },3000)\r\n    return (()=>clearTimeout(timeout))\r\n  },[list]) //every time it is change i'll get the new set of timeout\r\n  return <p className={`alert alert-${type}`}>{msg}</p>  //Note: we have alert-success and alert-danger className (depends on the type)\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nconst getLocalStorage = () => {\r\n  let list = localStorage.getItem('list');\r\n  //either list exists or not\r\n  if (list) {\r\n    return (list = JSON.parse(localStorage.getItem('list')));\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [list,setList] = useState(getLocalStorage())  //instead of array we use the localStorage function\r\n  const [value, setValue] = React.useState(\"\");  //values in the form\r\n  const [isEditing, setIsEditing] = useState(false) //is the item edited or not\r\n  const [editID,setEditId] = useState(null)   //which item is edited\r\n  const [alert,setAlert] = useState({show:false,msg:\"\",type:\"\"})   //the alert is an object\r\n\r\n  const handleChange = (e) =>{\r\n    let value = e.target.value\r\n    setValue(value)  \r\n    console.log(value)\r\n  }\r\n\r\n  //submit button can be submit or edit\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n      if(!value){\r\n        showAlert(true,\"danger\",\"Please enter value\")  //or don't write the showAlert function and instead write setAlert(show:true,type:\"danger\",msg:\"Please enter value\") \r\n      }\r\n      //value exists and we are editing\r\n      else if(value && isEditing){\r\n        setList(list.map((item)=>{ \r\n          if(item.id === editID){  \r\n            return{...item,title:value}  //item will be the same but title will be changed and equal to the value\r\n          }\r\n          else{\r\n            return item \r\n          }\r\n        })\r\n        )\r\n        setValue(\"\")\r\n        setEditId(null)\r\n        setIsEditing(false)\r\n        showAlert(true,'success','value changed')\r\n      }\r\n      //add a new item\r\n      else{\r\n        showAlert(true,'success','item added to the list')\r\n        const newItem = {id: new Date().getTime().toString(), title:value}  //or use react id library\r\n        setList((prevState)=> [...prevState,newItem])  //answer of each item will be {id:...,title:...}\r\n        setValue(\"\")\r\n      }\r\n  }\r\n  //define a seperate alert function for alert\r\n  const showAlert = (show=false,type=\"\", msg=\"\")=>{\r\n    setAlert({show,type,msg})  //this is ES6 it's equal to setAlert({show:show,type:type,msg:msg}) in ES5\r\n  }\r\n\r\n  //clear items function\r\n  const clearList = () =>{\r\n    showAlert(true,'danger','empty list')\r\n    setList([])  //the list will be empty\r\n  }\r\n\r\n  const removeItem = (id) =>{\r\n    showAlert(true,'danger','item removed')\r\n    setList(list.filter((item)=>{\r\n      return item.id !== id\r\n    }   \r\n    ))\r\n  }\r\n\r\n  const handleEditbtn = (id) =>{\r\n    //note: .find returns the FIRST element of an array which pass the condition \r\n    const specificItem = list.find((item)=>item.id===id);\r\n    console.log(specificItem)  //answer:{id:...,title:....}\r\n    setIsEditing(true)\r\n    setEditId(id)\r\n    setValue(specificItem.title)  //answer: the title which as same as value\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setList(list)\r\n    setValue(value)\r\n    console.log(list)\r\n  },[list])\r\n\r\n  //to set the local storage\r\n  useEffect(()=>{\r\n    localStorage.setItem('list',JSON.stringify(list))\r\n  },[list])\r\n  \r\n  return(\r\n    <div>\r\n      <section className='section-center'>\r\n        <form className='grocery-form' onSubmit={handleSubmit}>\r\n          {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}  \r\n          <h3>grocery bud</h3>\r\n          <div className='form-control'>\r\n            <input type=\"text\" className='grocery' placeholder='e.g. eggs' value={value} onChange={handleChange}/>\r\n            <button type='submit' className='submit-btn'>{isEditing ? \"edit\" : \"submit\"}</button>\r\n          </div>\r\n        </form>\r\n\r\n        {list.length > 0  && (\r\n            <div className='grocery-container'>\r\n                <List list={list} handleEditbtn={handleEditbtn} removeItem={removeItem}/>\r\n            <button className='clear-btn' onClick={clearList}>clear items</button>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}